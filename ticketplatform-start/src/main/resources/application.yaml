server:
  port: 8080
  tomcat:
    threads:
      max: 200 # max 200 threads handle concurrently

spring:
  application:
    name: ticketplatform.com
  datasource:
    tomcat:
      max-active: 20 # max connection
      min-idle: 5 # min number of connection in pool
      initial-size: 5
      max-wait: 30000
      test-on-borrow: true
      validation-query: SELECT 1
    url: jdbc:mysql://localhost:3316/vetautet
    username: root
    password: root1234
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
  jpa:
    database: mysql
    show-sql: true
    hibernate:
      ddl-auto: none  # No auto create
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  jackson:
    serialization:
      indent-output: true
  data:
    redis:
      host: 127.0.0.1 # Host of the Redis server
      port: 6319 # Port of the Redis server for connection
      password: ""  # Password for connecting to the Redis server (default is empty)
      lettuce:
        pool: # Connection pool settings
          max-active: 8 # Maximum number of active connections in the pool (uses -1 for no limit)
          max-idle: 8 # Maximum number of idle connections in the pool
          min-idle: 0 # Minimum number of idle connections in the pool
          max-wait: -1ms # Maximum wait time to get a connection from the pool (uses -1 for no limit)
      connect-timeout: 30000 # Connection timeout (in milliseconds)
resilience4j:
  circuitbreaker:
    instances:
      checkRandom:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
#        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
#        recordFailurePredicate: io.github.robwin.exception.RecordFailurePredicate
  ratelimiter:
    instances:
      backendA:
        limitForPeriod: 2
        limitRefreshPeriod: 10s
        timeoutDuration: 0
        registerHealthIndicator: true
        eventConsumerBufferSize: 100
      backendB:
        limitForPeriod: 5
        limitRefreshPeriod: 10s
        timeoutDuration: 3s

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - '*'
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true